// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <RcppArmadillo.h>
#include <Rcpp.h>

using namespace Rcpp;

#ifdef RCPP_USE_GLOBAL_ROSTREAM
Rcpp::Rostream<true>&  Rcpp::Rcout = Rcpp::Rcpp_cout_get();
Rcpp::Rostream<false>& Rcpp::Rcerr = Rcpp::Rcpp_cerr_get();
#endif

// Local_Regional_Permutations
arma::mat Local_Regional_Permutations(const arma::mat& permutationMatrix, const arma::mat& permut_col, const arma::mat& cellPropMatrix, const arma::mat& spotGeneMatrix, const arma::vec& LigandVectorIndex, const arma::vec& ReceptorVectorIndex, const arma::mat& null_expression, int nBoot);
RcppExport SEXP _SpaCCI_Local_Regional_Permutations(SEXP permutationMatrixSEXP, SEXP permut_colSEXP, SEXP cellPropMatrixSEXP, SEXP spotGeneMatrixSEXP, SEXP LigandVectorIndexSEXP, SEXP ReceptorVectorIndexSEXP, SEXP null_expressionSEXP, SEXP nBootSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const arma::mat& >::type permutationMatrix(permutationMatrixSEXP);
    Rcpp::traits::input_parameter< const arma::mat& >::type permut_col(permut_colSEXP);
    Rcpp::traits::input_parameter< const arma::mat& >::type cellPropMatrix(cellPropMatrixSEXP);
    Rcpp::traits::input_parameter< const arma::mat& >::type spotGeneMatrix(spotGeneMatrixSEXP);
    Rcpp::traits::input_parameter< const arma::vec& >::type LigandVectorIndex(LigandVectorIndexSEXP);
    Rcpp::traits::input_parameter< const arma::vec& >::type ReceptorVectorIndex(ReceptorVectorIndexSEXP);
    Rcpp::traits::input_parameter< const arma::mat& >::type null_expression(null_expressionSEXP);
    Rcpp::traits::input_parameter< int >::type nBoot(nBootSEXP);
    rcpp_result_gen = Rcpp::wrap(Local_Regional_Permutations(permutationMatrix, permut_col, cellPropMatrix, spotGeneMatrix, LigandVectorIndex, ReceptorVectorIndex, null_expression, nBoot));
    return rcpp_result_gen;
END_RCPP
}
// Global_Permutations
arma::mat Global_Permutations(const arma::mat& permutationMatrix, const arma::mat& permut_null_regionMatrix, const arma::mat& permut_col, const arma::mat& cellPropMatrix, const arma::mat& spotGeneMatrix, const arma::vec& LigandVectorIndex, const arma::vec& ReceptorVectorIndex, const arma::mat& null_expression, int nBoot);
RcppExport SEXP _SpaCCI_Global_Permutations(SEXP permutationMatrixSEXP, SEXP permut_null_regionMatrixSEXP, SEXP permut_colSEXP, SEXP cellPropMatrixSEXP, SEXP spotGeneMatrixSEXP, SEXP LigandVectorIndexSEXP, SEXP ReceptorVectorIndexSEXP, SEXP null_expressionSEXP, SEXP nBootSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const arma::mat& >::type permutationMatrix(permutationMatrixSEXP);
    Rcpp::traits::input_parameter< const arma::mat& >::type permut_null_regionMatrix(permut_null_regionMatrixSEXP);
    Rcpp::traits::input_parameter< const arma::mat& >::type permut_col(permut_colSEXP);
    Rcpp::traits::input_parameter< const arma::mat& >::type cellPropMatrix(cellPropMatrixSEXP);
    Rcpp::traits::input_parameter< const arma::mat& >::type spotGeneMatrix(spotGeneMatrixSEXP);
    Rcpp::traits::input_parameter< const arma::vec& >::type LigandVectorIndex(LigandVectorIndexSEXP);
    Rcpp::traits::input_parameter< const arma::vec& >::type ReceptorVectorIndex(ReceptorVectorIndexSEXP);
    Rcpp::traits::input_parameter< const arma::mat& >::type null_expression(null_expressionSEXP);
    Rcpp::traits::input_parameter< int >::type nBoot(nBootSEXP);
    rcpp_result_gen = Rcpp::wrap(Global_Permutations(permutationMatrix, permut_null_regionMatrix, permut_col, cellPropMatrix, spotGeneMatrix, LigandVectorIndex, ReceptorVectorIndex, null_expression, nBoot));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_SpaCCI_Local_Regional_Permutations", (DL_FUNC) &_SpaCCI_Local_Regional_Permutations, 8},
    {"_SpaCCI_Global_Permutations", (DL_FUNC) &_SpaCCI_Global_Permutations, 9},
    {NULL, NULL, 0}
};

RcppExport void R_init_SpaCCI(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
